'use strict';

//import { KVdb } from './index';
const KVdb = require('./index')

const test = async () => {
  KVdb.BASE_URL = 'http://localhost:1323'

  const b = KVdb.bucket("4tASe45y96RZpEBhdo2oLP", 'secret') // prod
  //const b = KVdb.bucket("EkBxK5753EgWuCM3jPgJ6A", 'secret') // dev

  var r = await b.set("foo", "new value")
  console.log("set: ", r)

  r = await b.set("foo-bar", "new value bar")
  console.log("set: ", r)

  r = await b.incr("foo-int", "1")
  console.log("incr: ", r)

  r = await b.incr("foo-float", 1.01)
  console.log("incr float: ", r)

  r = await b.delete("foo")
  console.log("delete: ", r)

  try {
    const val = await b.get("foo")
    console.log("get: ", val)
  } catch(e) {
    console.log("get error: ", e)
  }

  const keys = await b.list()
  console.log("list: ", keys)

  r = await b.list({prefix: "foo", values: true})
  for (const [key, value] of r) {
    console.log(`${key}=${value}`)
  }

  // access token
  const token = await b.accessToken({prefix: 'users:1:', ttl: 3600, permissions: ['read', 'write', 'enumerate']})
  console.log('access token: ', token)

  const bucket = KVdb.bucket(b.id, token)
  // set a key
  await bucket.set('users:1:flavor', 'oatmeal')

  // get a key
  let res = await bucket.get('users:1:flavor')
  console.log('flavor: ', res)

  // increment a key
  await bucket.incr('users:1:profile_views', 1)

  // list key by prefix (returns an array of keys)
  res = await bucket.list({prefix: 'users:1:'})
  console.log('keys: ', res)

  // list key-values by prefix (returns an array of [key, value] tuples)
  res = await bucket.list({prefix: 'users:1:', values: true})
  for (const [key, value] of res) {
    console.log(`key: ${key} => ${value}`)
  }
}

try {
  test()
} catch(e) {
  console.log('app error: ', e)
}
